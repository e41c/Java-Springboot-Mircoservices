version: "3.8" # Use the latest version of Docker Compose

services:
  # MONGODB
  mongodb:
    image: mongo:latest
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: rootadmin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./data/mongo/products:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    container_name: post-mongodb
    command: mongod --auth
    networks:
      - spring

  # POSTGRESQL for user service
  user-postgresdb:
    image: postgres:latest
    container_name: user-postgresdb
    volumes:
      - ./data/postgresql/user-data:/var/lib/postgresql/data
    ports:
      - "8000:5432"
    restart: always
    environment:
      POSTGRES_USER: rootadmin
      POSTGRES_PASSWORD: password
    networks:
      - spring

  # POSTGRESQL for comment service
  comment-postgresdb:
    image: postgres:latest
    container_name: comment-postgresdb
    volumes:
      - ./data/postgresql/comment-data:/var/lib/postgresql/data
      - ./init/postgres/order-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "8001:5434"
    restart: always
    environment:
      POSTGRES_USER: rootadmin
      POSTGRES_PASSWORD: password
    networks:
      - spring

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: ./Dockerfile
    image: user-service:1.0
    ports:
      - "8083:8083"
    container_name: user-service
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - user-postgresdb
    networks:
      - spring

  # Post Service
  post-service:
    build:
      context: ./post-service
      dockerfile: ./Dockerfile
    image: post-service:1.0
    ports:
      - "8080:8080"
    container_name: post-service
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
    networks:
      - spring

  # Comment Service
  comment-service:
    build:
      context: ./comment-service
      dockerfile: ./Dockerfile
    image: comment-service:1.0
    ports:
      - "8087:8087"
    container_name: comment-service
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - comment-postgresdb
    networks:
      - spring

networks:
  spring:
    driver: bridge
